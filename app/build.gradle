/*
 * Copyright (c) 2016. . The Km2Labs Project
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    repositories {
        mavenCentral()
        maven { url 'https://maven.google.com' }
        maven { url "https://clojars.org/repo/" }
        maven { url 'http://dl.bintray.com/amulyakhare/maven' }
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://urbanairship.bintray.com/android" }
    }
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }


    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    dexOptions {
        maxProcessCount 2
        javaMaxHeapSize "2g"
    }

    defaultConfig {
        applicationId "com.enfle.spendview"

        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res/layout/expense',
                    'src/main/res/layout/expensebook',
                    'src/main/res/layout/account',
                    'src/main/res/layout/login',
                    'src/main/res/layout/member',
                    'src/main/res/layout/category',
                    'src/main/res/layout',
                    'src/main/res'
            ]
        }
        main.java.srcDirs += 'src/main/kotlin'
    }
    signingConfigs {
        release
    }
    buildTypes {
        debug {
            zipAlignEnabled true
            minifyEnabled false
            resValue "string", "app_name", "Expense Manager Debug"
        }
        release {
            zipAlignEnabled true
            minifyEnabled true
            useProguard true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
            resValue "string", "app_name", "Expense Manager"
        }
    }
}

def Properties props = new Properties()
def propFile = new File('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}

dependencies {

    /*Android support libs*/
    implementation "com.android.support:palette-v7:$ANDROID_SUPPORT_LIBRARY"
    implementation "com.android.support:gridlayout-v7:$ANDROID_SUPPORT_LIBRARY"
    implementation "com.android.support:appcompat-v7:$ANDROID_SUPPORT_LIBRARY"
    implementation "com.android.support:recyclerview-v7:$ANDROID_SUPPORT_LIBRARY"
    implementation "com.android.support:design:$ANDROID_SUPPORT_LIBRARY"
    implementation "com.android.support:support-v4:$ANDROID_SUPPORT_LIBRARY"
    implementation "com.android.support:cardview-v7:$ANDROID_SUPPORT_LIBRARY"
    implementation "com.android.support:support-vector-drawable:$ANDROID_SUPPORT_LIBRARY"

    /*play service dependency*/
    implementation "com.google.android.gms:play-services-analytics:$GOOGLE_PLAY_SERVICE"
    implementation "com.google.android.gms:play-services-location:$GOOGLE_PLAY_SERVICE"
    implementation "com.google.android.gms:play-services-auth:$GOOGLE_PLAY_SERVICE"

    /*Firebase*/
    implementation "com.google.firebase:firebase-core:$GOOGLE_PLAY_SERVICE"
    implementation "com.google.firebase:firebase-database:$GOOGLE_PLAY_SERVICE"
    implementation "com.google.firebase:firebase-auth:$GOOGLE_PLAY_SERVICE"
    implementation "com.google.firebase:firebase-messaging:$GOOGLE_PLAY_SERVICE"

    /*Facebook*/
    implementation 'com.facebook.android:facebook-android-sdk:[4,5)'
    implementation "com.facebook.stetho:stetho:$STETHO"
    implementation "com.facebook.stetho:stetho-okhttp3:$STETHO"

    /* Retrofit*/
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT"

    implementation "com.squareup.retrofit2:converter-gson:$RETROFIT"
    /* SQLBrite*/
    implementation "com.squareup.sqlbrite:sqlbrite:$SQLBRITE"

    /* Picaso*/
    implementation 'com.squareup.picasso:picasso:2.5.2'

    /*Json parsing */
    implementation 'com.google.code.gson:gson:2.8.1'

    /* Logging*/
    implementation 'com.jakewharton.timber:timber:4.1.0'

    /* Butterknife*/
    implementation 'com.jakewharton:butterknife:8.6.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.6.0'

    compile 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'

    /* Dependency Injection*/
    implementation 'com.google.dagger:dagger:2.11-rc2'
    implementation 'com.google.dagger:dagger-android-support:2.11-rc2'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.11-rc2'

    /* Parceler*/
    implementation 'org.parceler:parceler-api:1.1.5'
    annotationProcessor "org.parceler:parceler:1.1.5"

    /*Reactive programming*/
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.1.6'

    implementation('com.crashlytics.sdk.android:crashlytics:2.6.3@aar') {
        transitive = true;
    }
}
apply plugin: 'com.google.gms.google-services'
repositories {
    mavenCentral()
}

